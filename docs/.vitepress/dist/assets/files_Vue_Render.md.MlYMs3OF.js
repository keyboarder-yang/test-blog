import{_ as s,o as e,c as i,R as a}from"./chunks/framework.Vrn_wj7i.js";const g=JSON.parse('{"title":"vue学习 --- render函数","description":"","frontmatter":{"title":"vue学习 --- render函数","date":"2022-05-14T15:31:49.000Z","tags":"render vue","summary":"对于VUE渲染函数的一些简单理解","categories":"Vue"},"headers":[],"relativePath":"files/Vue/Render.md","filePath":"files/Vue/Render.md"}'),n={name:"files/Vue/Render.md"},l=a(`<h1 id="对于vue中render函数的简单理解" tabindex="-1">对于vue中render函数的简单理解 <a class="header-anchor" href="#对于vue中render函数的简单理解" aria-label="Permalink to &quot;对于vue中render函数的简单理解&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><ol><li><p><code>render</code>函数和<code>template</code>的作用一样，用于渲染页面。接收一个参数<code>createElement</code>。</p></li><li><p><code>createElement</code>参数同样也是一个函数，他接收三个参数，返回一个<code>VNode</code>节点。</p><ul><li><p>一个 HTML 标签字符串，组件选项对象，或者解析上述任何一种的一个 <code>async</code> 异步函数。类型：<code>String | Object | Function</code>。必需。</p></li><li><p>一个包含模板相关属性的数据对象，你可以在 <code>template </code>中使用这些特性。类型：<code>Object</code>。可选。</p></li><li><p>子虚拟节点 <code>VNodes</code>，由 <code>createElement() </code>构建而成，也可以使用字符串来生成“文本虚拟节点”。类型：<code>String | Array</code>。可选。</p></li></ul></li></ol><h2 id="简单用法" tabindex="-1">简单用法 <a class="header-anchor" href="#简单用法" aria-label="Permalink to &quot;简单用法&quot;">​</a></h2><ol><li><p><a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noreferrer">官网</a>示例：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 父组件中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;RenderVue level=&quot;1&quot;&gt;标题1&lt;/RenderVue&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;RenderVue level=&quot;2&quot;&gt;标题2&lt;/RenderVue&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;RenderVue level=&quot;3&quot;&gt;标题3&lt;/RenderVue&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;RenderVue level=&quot;4&quot;&gt;标题4&lt;/RenderVue&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 子组件中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  props: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    level: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      type: String,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;h&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.level,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$slots.default)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><ul><li><code>Vue</code>文件中<code>Template</code>最终会被编译成<code>render</code>函数的形式</li><li><code>Vue</code>文件中若写了<code>&lt;template&gt;&lt;/template&gt;</code> <code>render</code>函数会变的无效</li></ul><h2 id="引用地址" tabindex="-1">引用地址 <a class="header-anchor" href="#引用地址" aria-label="Permalink to &quot;引用地址&quot;">​</a></h2><blockquote><ul><li><a href="https://blog.csdn.net/weixin_43974265/article/details/112747768" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_43974265/article/details/112747768</a></li></ul></blockquote>`,9),t=[l];function h(p,r,d,k,E,o){return e(),i("div",null,t)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};
