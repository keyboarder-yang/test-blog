import{_ as e,o,c as a,R as t}from"./chunks/framework.Vrn_wj7i.js";const S=JSON.parse('{"title":"vue学习 --- Scoped样式‘隔离’","description":"","frontmatter":{"title":"vue学习 --- Scoped样式‘隔离’","date":"2022-09-15T09:11:49.000Z","tags":"scoped vue","summary":"scoped样式隔离的原理","categories":"Vue"},"headers":[],"relativePath":"files/Vue/Scoped.md","filePath":"files/Vue/Scoped.md"}'),s={name:"files/Vue/Scoped.md"},d=t('<h1 id="scoped原理" tabindex="-1">scoped原理 <a class="header-anchor" href="#scoped原理" aria-label="Permalink to &quot;scoped原理&quot;">​</a></h1><h2 id="_1-简介" tabindex="-1">1. 简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1. 简介&quot;">​</a></h2><p>当在vue组件中的style标签上添加scoped属性后，它的样式就只会在当前vue组件中生效而不会影响其他组件的样式。从而使得样式不会相互污染，实现了样式的模块化。</p><h2 id="_2-原理" tabindex="-1">2. 原理 <a class="header-anchor" href="#_2-原理" aria-label="Permalink to &quot;2. 原理&quot;">​</a></h2><p>vue通过<code>scoped</code>实现样式隔离的本质是基于 <strong>HTML中的自定义属性</strong>以及<strong>CSS中的属性选择器</strong>。通过给HTML标签添加自定义属性，CSS中使用属性选择器。由于每个组件的自定义属性的不同，从而实现组件间的样式隔离，实现样式的模块化。</p><h2 id="_3-具体实现" tabindex="-1">3. 具体实现 <a class="header-anchor" href="#_3-具体实现" aria-label="Permalink to &quot;3. 具体实现&quot;">​</a></h2><p>具体来说，它是 <strong>通过 vue-loader 实现</strong> 的，实现过程大致分 3 步：</p><ol><li>首先 vue-loader 会解析 .vue 组件，提取出 template、script、style 对应的代码块；</li><li>然后构造组件实例，在组件实例的选项上绑定 ScopedId；</li><li>最后对 style 的 CSS 代码进行编译转化，应用 ScopedId 生成选择器的属性；</li></ol><blockquote><p>每个 Vue 文件都将对应一个唯一的 id，该 id 根据文件路径名和内容 hash 生成，通过组合形成scopeId</p></blockquote>',9),c=[d];function r(l,i,p,n,_,u){return o(),a("div",null,c)}const m=e(s,[["render",r]]);export{S as __pageData,m as default};
